// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tasnim_Loan.Persistence.Context;

namespace Tasnim_Loan.Persistence.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230803224818_tasnim")]
    partial class tasnim
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Tasnim_Loan.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Creation_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("National_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Unique_Payment_Identifier")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Tasnim_Loan.Domain.Entities.Loan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Cleared")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Cleared_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Closed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<string>("Guaranty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Introducer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Loan_Num")
                        .HasColumnType("int");

                    b.Property<int>("Payment_Amount")
                        .HasColumnType("int");

                    b.Property<int>("Payment_Num")
                        .HasColumnType("int");

                    b.Property<DateTime>("Staart_Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Total_Amount")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("Tasnim_Loan.Domain.Entities.Transaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Creditor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Debtor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trans_Num")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Tasnim_Loan.Domain.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Pass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tasnim_Loan.Domain.Entities.Loan", b =>
                {
                    b.HasOne("Tasnim_Loan.Domain.Entities.Customer", "Customers")
                        .WithMany("Loan")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tasnim_Loan.Domain.Entities.User", "User")
                        .WithMany("Loan")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tasnim_Loan.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("Tasnim_Loan.Domain.Entities.Customer", "Customers")
                        .WithMany("Transaction")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tasnim_Loan.Domain.Entities.User", "User")
                        .WithMany("Transaction")
                        .HasForeignKey("User_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customers");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tasnim_Loan.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Loan");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("Tasnim_Loan.Domain.Entities.User", b =>
                {
                    b.Navigation("Loan");

                    b.Navigation("Transaction");
                });
#pragma warning restore 612, 618
        }
    }
}
